{"version":3,"file":"atoms-Button-stories-Button-stories.66ebeac3.iframe.bundle.js","mappings":";AAsIA;;;;;AArHA;;;;;AAOA;;;;;AAOA;;;;;AAOA;;;;;AAOA;;;;;AAOA;AAmFA;;;;;;AArEA;;;;;;AAQA;;;;;;AAQA;;;;;;AAQA;AA8CA;;AApCA;;AAIA;AAiCA;;AAvBA;;AAIA;;AAIA","sources":["webpack://jumpit-ui-kit/./src/components/atoms/Button/styled.ts"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport {\r\n  ButtonVariants,\r\n  ButtonColorSchemes,\r\n  ButtonSizes,\r\n  ButtonShapes,\r\n} from \"./type\";\r\n\r\nconst getButtonSize = (size: ButtonSizes) => {\r\n  switch (size) {\r\n    case ButtonSizes.TINY:\r\n      return css`\r\n        height: 28px;\r\n        font-weight: 700;\r\n        font-size: 13px;\r\n        line-height: 20px;\r\n      `;\r\n    case ButtonSizes.SMALL:\r\n      return css`\r\n        height: 36px;\r\n        font-weight: 700;\r\n        font-size: 14px;\r\n        line-height: 22px;\r\n      `;\r\n    case ButtonSizes.MEDIUM:\r\n      return css`\r\n        height: 40px;\r\n        font-weight: 700;\r\n        font-size: 14px;\r\n        line-height: 22px;\r\n      `;\r\n    case ButtonSizes.LARGE:\r\n      return css`\r\n        height: 48px;\r\n        font-weight: 700;\r\n        font-size: 15px;\r\n        line-height: 24px;\r\n      `;\r\n    case ButtonSizes.XLAGRE:\r\n      return css`\r\n        height: 56px;\r\n        font-weight: 700;\r\n        font-size: 16px;\r\n        line-height: 24px;\r\n      `;\r\n    case ButtonSizes.XXLARGE:\r\n      return css`\r\n        height: 64px;\r\n        font-weight: 700;\r\n        font-size: 18px;\r\n        line-height: 28px;\r\n      `;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nconst getButtonColor = (colorScheme: ButtonColorSchemes) => {\r\n  switch (colorScheme) {\r\n    case ButtonColorSchemes.PRIMARY:\r\n      return css`\r\n        background: #00dd6d;\r\n        color: #fff;\r\n        &:hover {\r\n          background: #01c662;\r\n        }\r\n      `;\r\n    case ButtonColorSchemes.BLACK:\r\n      return css`\r\n        background: #000;\r\n        color: #fff;\r\n        &:hover {\r\n          background: #333;\r\n        }\r\n      `;\r\n    case ButtonColorSchemes.GRAY:\r\n      return css`\r\n        background: #e4e4e4;\r\n        color: #000;\r\n        &:hover {\r\n          background: #d4d4d4;\r\n        }\r\n      `;\r\n    case ButtonColorSchemes.WHITE:\r\n      return css`\r\n        background: #fff;\r\n        color: #000;\r\n        &:hover {\r\n          background: #f8f8f8;\r\n        }\r\n      `;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nconst getButtonVariant = (variant: ButtonVariants) => {\r\n  switch (variant) {\r\n    case ButtonVariants.OUTLINE:\r\n      return css`\r\n        border: 1px solid #d4d4d4;\r\n      `;\r\n    case ButtonVariants.LINK:\r\n      return css`\r\n        border: none;\r\n      `;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nconst getButtonShape = (shape: ButtonShapes) => {\r\n  switch (shape) {\r\n    case ButtonShapes.SQUARE:\r\n      return css`\r\n        border-radius: 0;\r\n      `;\r\n    case ButtonShapes.ROUNDED:\r\n      return css`\r\n        border-radius: 8px;\r\n      `;\r\n    case ButtonShapes.CIRCLE:\r\n      return css`\r\n        border-radius: 50%;\r\n      `;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const Button = styled.button<{\r\n  size: ButtonSizes;\r\n  colorScheme: ButtonColorSchemes;\r\n  variant?: ButtonVariants;\r\n  shape?: ButtonShapes;\r\n  disabled?: boolean;\r\n}>`\r\n  ${({ size }) => size && getButtonSize(size)}\r\n  ${({ colorScheme }) => getButtonColor(colorScheme)}\r\n  ${({ variant }) => variant && getButtonVariant(variant)}\r\n  ${({ shape }) => shape && getButtonShape(shape)}\r\n`;\r\n"],"names":[],"sourceRoot":""}